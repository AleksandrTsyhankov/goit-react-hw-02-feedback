{"version":3,"sources":["feedback/FeedbackOptions/FeedbackOptionsStyles.module.css","feedback/Statistics/StatisticsStyles.module.css","feedback/Section/SectionStyles.module.css","feedback/Notification/NotificationStyles.module.css","feedback/FeedbackOptions/FeedbackOptions.jsx","feedback/Statistics/Statistics.jsx","feedback/Section/Section.jsx","feedback/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onFeedbackButtonClick","this","props","className","s","btnList","btnListItem","type","btn","onClick","Component","Statistics","stats","good","neutral","bad","total","positiveFeedback","statList","statListItem","Section","title","children","section","Notification","notification","App","state","e","preventDefault","prevStateName","target","textContent","toLowerCase","setState","prevState","countFullStats","Math","round","statsCnt","Object","values","reduce","acc","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,qCAAqC,QAAU,uCAAuC,YAAc,2CAA2C,IAAM,qC,gBCA/KD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,SAAW,mCAAmC,aAAe,yC,mBCAvHD,EAAOC,QAAU,CAAC,QAAU,iC,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,2C,mKCqClBC,E,4JAlCX,WACI,IAAQC,EAA0BC,KAAKC,MAA/BF,sBAER,OACR,qBAAIG,UAAWC,IAAEC,QAAjB,UACoB,oBAAIF,UAAWC,IAAEE,YAAjB,SACI,wBACIC,KAAK,SACLJ,UAAWC,IAAEI,IACbC,QAAST,EAHb,oBAOJ,oBAAIG,UAAWC,IAAEE,YAAjB,SACI,wBACIC,KAAK,SACLJ,UAAWC,IAAEI,IACbC,QAAST,EAHb,uBAOJ,oBAAIG,UAAWC,IAAEE,YAAjB,SACI,wBACIC,KAAK,SACLJ,UAAWC,IAAEI,IACbC,QAAST,EAHb,0B,GAvBMU,a,gBCgBfC,E,4JAfX,WACI,MAAwDV,KAAKC,MAAMU,MAA3DC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,iBAEnC,OACQ,qBAAId,UAAWC,IAAEc,SAAjB,UACI,qBAAIf,UAAWC,IAAEe,aAAjB,mBAAsCN,KACtC,qBAAIV,UAAWC,IAAEe,aAAjB,sBAAyCL,KACzC,qBAAIX,UAAWC,IAAEe,aAAjB,kBAAqCJ,KACrC,qBAAIZ,UAAWC,IAAEe,aAAjB,oBAAuCH,KACvC,qBAAIb,UAAWC,IAAEe,aAAjB,gCAAmDF,EAAnD,c,GAVKP,a,iBCaVU,E,4JAZX,WACI,MAA0BnB,KAAKC,MAAxBmB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAEd,OACI,0BAASnB,UAAWC,IAAEmB,QAAtB,UACI,6BAAKF,IACJC,S,GAPKZ,a,iBCQPc,E,4JAPX,WACF,OACc,mBAAGrB,UAAWC,IAAEqB,aAAhB,mC,GAHWf,aCqDZgB,E,4MAjDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,sBAAwB,SAAA4B,GACtBA,EAAEC,iBACF,IAAMC,EAAgBF,EAAEG,OAAOC,YAAYC,cAE3C,EAAKC,UACH,SAAAC,GAAS,sBACJL,EAAgBK,EAAUL,GAAiB,O,EAKpDM,eAAiB,WACf,MAA+B,EAAKT,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQH,EAAOC,EAAUC,EAK/B,MADiB,CAACF,OAAMC,UAASC,MAAKC,QAAOC,iBAHV,IAAVD,EAAc,EACnCqB,KAAKC,MAAOzB,EAAOG,EAAS,O,4CAMlC,WACE,IAAMuB,EAAWC,OAAOC,OAAOxC,KAAK0B,OAAOe,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,KAExE,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBA,MAAO,wBAAyBrB,sBAAuBC,KAAKD,0BAE/E,cAAC,EAAD,CAASqB,MAAM,aAAf,SAEiB,IAAbkB,EACE,cAAC,EAAD,IACA,cAAE,EAAF,CAAalB,MAAM,aAAaT,MAAOX,KAAKmC,4B,GAxCxC1B,aCMHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,EAAQ,IAERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.9062d756.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FeedbackOptionsStyles_title__3Bxow\",\"btnList\":\"FeedbackOptionsStyles_btnList__1S_TC\",\"btnListItem\":\"FeedbackOptionsStyles_btnListItem__U6t0a\",\"btn\":\"FeedbackOptionsStyles_btn__3JT-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"StatisticsStyles_title__374KA\",\"statList\":\"StatisticsStyles_statList__2EwDw\",\"statListItem\":\"StatisticsStyles_statListItem__VhP6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SectionStyles_section__1xOuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"NotificationStyles_notification__27_5P\"};","import React, { Component } from 'react';\r\nimport s from './FeedbackOptionsStyles.module.css';\r\n\r\nclass FeedbackOptions extends Component {\r\n    render() {\r\n        const { onFeedbackButtonClick } = this.props;\r\n\r\n        return (\r\n<ul className={s.btnList}>\r\n                    <li className={s.btnListItem}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={s.btn}\r\n                            onClick={onFeedbackButtonClick}\r\n                        >Good\r\n                        </button>\r\n                    </li>\r\n                    <li className={s.btnListItem}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={s.btn}\r\n                            onClick={onFeedbackButtonClick}\r\n                        >Neutral\r\n                        </button>\r\n                    </li>\r\n                    <li className={s.btnListItem}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={s.btn}\r\n                            onClick={onFeedbackButtonClick}\r\n                        >Bad\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport s from './StatisticsStyles.module.css';\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positiveFeedback } = this.props.stats;\r\n\r\n        return (\r\n                <ul className={s.statList}>\r\n                    <li className={s.statListItem}>Good: {good}</li>\r\n                    <li className={s.statListItem}>Neutral: {neutral}</li>\r\n                    <li className={s.statListItem}>Bad: {bad}</li>\r\n                    <li className={s.statListItem}>Total: {total}</li>\r\n                    <li className={s.statListItem}>Positive feedback: {positiveFeedback}%</li>\r\n                </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport s from './SectionStyles.module.css';\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const {title, children} = this.props\r\n\r\n        return (\r\n            <section className={s.section}>\r\n                <h2>{title}</h2>\r\n                {children}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport s from './NotificationStyles.module.css';\r\n\r\nclass Notification extends Component {\r\n    render() {\r\n  return (\r\n                <p className={s.notification}>No feedback given</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport FeedbackOptions from './feedback/FeedbackOptions/FeedbackOptions';\nimport Statistics from './feedback/Statistics/Statistics';\nimport Section from './feedback/Section/Section';\nimport Notification from './feedback/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedbackButtonClick = e => {\n    e.preventDefault();\n    const prevStateName = e.target.textContent.toLowerCase();\n    \n    this.setState(\n      prevState => (\n        { [prevStateName]: prevState[prevStateName] + 1 }\n      )\n    )\n  }\n  \n  countFullStats = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    const positiveFeedback = total === 0 ? 0\n      : Math.round((good / total) * 100);\n    \n    const allStats = {good, neutral, bad, total, positiveFeedback}\n    return allStats;\n  }\n\n  render() {\n    const statsCnt = Object.values(this.state).reduce((acc, item) => (acc + item));\n    // const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions title={\"Please leave feedback\"} onFeedbackButtonClick={this.onFeedbackButtonClick}/>\n        </Section>\n        <Section title=\"Statistics\">\n          {\n            statsCnt === 0\n            ? <Notification />\n            : < Statistics title=\"Statistics\" stats={this.countFullStats()} />\n          }\n        </Section>\n        \n         \n      </>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('typeface-montserrat')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}